# HTTP to HTTPS redirect Server block
# server {
# 	listen 80;
# 	server_name www.example.com;
# 	status_zone www.example.com_http;

# 	return 301 https://$host$request_uri;
# }

server {
	# Below line is to enable HTTPS
	listen 443 ssl;
	server_name www.example.com;
	status_zone www.example.com_https;	

	# SSL Certificate details to enable HTTPS
	ssl_certificate /etc/ssl/example.com.crt;
	ssl_certificate_key /etc/ssl/example.com.key;

	# For testing pass phrase
	# ssl_certificate_key /etc/ssl/example.com.withpass.key;
	# ssl_password_file /etc/ssl/valid.pass;
	# ssl_password_file /etc/ssl/invalid.pass;

	#For testing mTLS (additions from line 26-33)
	# ssl_client_certificate /etc/ssl/mtls/ca.crt;
	# ssl_verify_client on;
	
	# error_page 495 496 = @fallback;
	
	# location @fallback{
	# 	return 403;
	# }
	

	location / {
		
		# # Below two lines are to enable keepalive connections
		# proxy_http_version 1.1;
		# proxy_set_header Connection "";
	
		# if ($ssl_client_verify != "SUCCESS"){return 403;}
		
		proxy_set_header X-Forwarded-For $remote_addr;
		proxy_pass http://nginx_hello;

		health_check interval=10 fails=3 passes=2;
	}

	# Below location block is for redirecting /old-url to /new-url
	location /old-url {
		return 301 /new-url;
	}
}

